generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tourist {
  tourist_id  Int       @id @default(autoincrement())
  private_key String?
  public_key  String
  name        String    @db.VarChar(100)
  phn_no      String    @unique @db.VarChar(15)
  email       String    @unique @db.VarChar(150)
  dob         DateTime? @db.Date
  gender      String?   @db.VarChar(10)
  created_at  DateTime? @default(now())
  trip_status String?   @db.VarChar(50)
  aadhar_no   String    @unique
  code        Int
  password    String    @db.VarChar(255)

  alert              alert[]
  e_contact          e_contact[]
  e_fir              e_fir[]
  feedback           feedback[]
  location           location[]
  police             police[]
  tourist_id_mapping tourist_department[]
  trip               trip[]
}

model e_contact {
  contact_id  Int      @id @default(autoincrement())
  tourist_id  Int?
  name        String   @db.VarChar(100)
  email       String?  @db.VarChar(150)
  phn_no      String?  @db.VarChar(15)
  gender      String?  @db.VarChar(10)
  location_id Int?
  relation    String?  @db.VarChar(50)
  alert       alert[]  @relation("AlertContact")
  tourist     tourist? @relation(fields: [tourist_id], references: [tourist_id], onDelete: Cascade)
}

model location {
  location_id Int       @id @default(autoincrement())
  tourist_id  Int?
  timestamps  DateTime? @default(now())
  latitude    Decimal?  @db.Decimal(9, 6)
  longitude   Decimal?  @db.Decimal(9, 6)
  alert       alert[]
  e_fir       e_fir[]
  tourist     tourist?  @relation(fields: [tourist_id], references: [tourist_id], onDelete: Cascade)
  trip        trip[]
}

model trip {
  trip_id     Int       @id @default(autoincrement())
  tourist_id  Int?
  dept_id     Int?
  start_date  DateTime  @db.Date
  end_date    DateTime? @db.Date
  qr_code     String?
  status      String?   @db.VarChar(50)
  location_id Int?
  location    location? @relation(fields: [location_id], references: [location_id])
  tourist     tourist?  @relation(fields: [tourist_id], references: [tourist_id], onDelete: Cascade)
}

model feedback {
  feedback_id Int       @id @default(autoincrement())
  tourist_id  Int?
  rating      Int?
  comments    String?
  suggestion  String?
  created_at  DateTime? @default(now())
  tourist     tourist?  @relation(fields: [tourist_id], references: [tourist_id], onDelete: Cascade)
}

model police {
  police_id  Int      @id @default(autoincrement())
  name       String?  @db.VarChar(100)
  area       String?  @db.VarChar(100)
  tourist_id Int?
  phn_no     String?  @db.VarChar(15)
  region     String?  @db.VarChar(100)
  password   String?  @db.VarChar(255)
  alert      alert[]  @relation("AlertPolice")
  e_fir      e_fir[]
  tourist    tourist? @relation(fields: [tourist_id], references: [tourist_id])
}

model alert {
  alert_id          Int        @id @default(autoincrement())
  tourist_id        Int?
  location_id       Int?
  alert_type        String?    @db.VarChar(50)
  status            String?    @db.VarChar(50)
  created_at        DateTime?  @default(now())
  notified_police   Int?
  notified_econtact Int?
  dept_id           Int?
  location          location?  @relation(fields: [location_id], references: [location_id])
  e_contact         e_contact? @relation("AlertContact", fields: [notified_econtact], references: [contact_id])
  police            police?    @relation("AlertPolice", fields: [notified_police], references: [police_id])
  tourist           tourist?   @relation(fields: [tourist_id], references: [tourist_id], onDelete: Cascade)
}

model e_fir {
  fir_id      Int       @id @default(autoincrement())
  tourist_id  Int?
  filed_at    DateTime? @default(now())
  police_dept Int?
  description String?
  location_id Int?
  location    location? @relation(fields: [location_id], references: [location_id])
  police      police?   @relation(fields: [police_dept], references: [police_id])
  tourist     tourist?  @relation(fields: [tourist_id], references: [tourist_id], onDelete: Cascade)
}

model tourist_department {
  dept_id Int @id @default(autoincrement())

  name              String?  @db.VarChar(100)
  region            String?  @db.VarChar(100)
  phn_no            String?  @db.VarChar(15)
  password          String?  @db.VarChar(255)
  tourist           tourist? @relation(fields: [touristTourist_id], references: [tourist_id])
  touristTourist_id Int?

  @@unique([name, region]) 
}
